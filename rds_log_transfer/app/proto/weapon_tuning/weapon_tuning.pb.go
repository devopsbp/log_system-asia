// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: weapon_tuning.proto

package weapon_tuning

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WeaponTuningMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                *string                `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CharacterId           *string                `protobuf:"bytes,2,opt,name=character_id,json=characterId" json:"character_id,omitempty"`
	CharacterClass        *string                `protobuf:"bytes,3,opt,name=character_class,json=characterClass" json:"character_class,omitempty"`
	UniqueId              *string                `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	ItemId                *int32                 `protobuf:"zigzag32,5,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemId_Name           *string                `protobuf:"bytes,6,opt,name=item_id__name,json=itemIdName" json:"item_id__name,omitempty"`
	PerkId1               *int32                 `protobuf:"zigzag32,7,opt,name=perk_id1,json=perkId1" json:"perk_id1,omitempty"`
	EffectValues1         *string                `protobuf:"bytes,8,opt,name=effect_values1,json=effectValues1" json:"effect_values1,omitempty"`
	PerkId2               *int32                 `protobuf:"zigzag32,9,opt,name=perk_id2,json=perkId2" json:"perk_id2,omitempty"`
	EffectValues2         *string                `protobuf:"bytes,10,opt,name=effect_values2,json=effectValues2" json:"effect_values2,omitempty"`
	PerkId3               *int32                 `protobuf:"zigzag32,11,opt,name=perk_id3,json=perkId3" json:"perk_id3,omitempty"`
	EffectValues3         *string                `protobuf:"bytes,12,opt,name=effect_values3,json=effectValues3" json:"effect_values3,omitempty"`
	PerkId4               *int32                 `protobuf:"zigzag32,13,opt,name=perk_id4,json=perkId4" json:"perk_id4,omitempty"`
	EffectValues4         *string                `protobuf:"bytes,14,opt,name=effect_values4,json=effectValues4" json:"effect_values4,omitempty"`
	PresentUnlockedSlot   *int32                 `protobuf:"zigzag32,15,opt,name=present_unlocked_slot,json=presentUnlockedSlot" json:"present_unlocked_slot,omitempty"`
	TuningTicketUniqueId  *string                `protobuf:"bytes,16,opt,name=tuning_ticket_unique_id,json=tuningTicketUniqueId" json:"tuning_ticket_unique_id,omitempty"`
	TuningTicketId        *int32                 `protobuf:"zigzag32,17,opt,name=tuning_ticket_id,json=tuningTicketId" json:"tuning_ticket_id,omitempty"`
	TuningTicketCount     *int32                 `protobuf:"zigzag32,18,opt,name=tuning_ticket_count,json=tuningTicketCount" json:"tuning_ticket_count,omitempty"`
	ProtectTicketId1      *int32                 `protobuf:"zigzag32,19,opt,name=protect_ticket_id1,json=protectTicketId1" json:"protect_ticket_id1,omitempty"`
	ProtectTicketCount1   *int32                 `protobuf:"zigzag32,20,opt,name=protect_ticket_count1,json=protectTicketCount1" json:"protect_ticket_count1,omitempty"`
	ProtectSlotNo1        *int32                 `protobuf:"zigzag32,21,opt,name=protect_slot_no1,json=protectSlotNo1" json:"protect_slot_no1,omitempty"`
	ProtectPerkId1        *int32                 `protobuf:"zigzag32,22,opt,name=protect_perk_id1,json=protectPerkId1" json:"protect_perk_id1,omitempty"`
	ProtectEffectValues1  *string                `protobuf:"bytes,23,opt,name=protect_effect_values1,json=protectEffectValues1" json:"protect_effect_values1,omitempty"`
	ProtectTicketId2      *int32                 `protobuf:"zigzag32,24,opt,name=protect_ticket_id2,json=protectTicketId2" json:"protect_ticket_id2,omitempty"`
	ProtectTicketCount2   *int32                 `protobuf:"zigzag32,25,opt,name=protect_ticket_count2,json=protectTicketCount2" json:"protect_ticket_count2,omitempty"`
	ProtectSlotNo2        *int32                 `protobuf:"zigzag32,26,opt,name=protect_slot_no2,json=protectSlotNo2" json:"protect_slot_no2,omitempty"`
	ProtectPerkId2        *int32                 `protobuf:"zigzag32,27,opt,name=protect_perk_id2,json=protectPerkId2" json:"protect_perk_id2,omitempty"`
	ProtectEffectValues2  *string                `protobuf:"bytes,28,opt,name=protect_effect_values2,json=protectEffectValues2" json:"protect_effect_values2,omitempty"`
	ProtectTicketId3      *int32                 `protobuf:"zigzag32,29,opt,name=protect_ticket_id3,json=protectTicketId3" json:"protect_ticket_id3,omitempty"`
	ProtectTicketCount3   *int32                 `protobuf:"zigzag32,30,opt,name=protect_ticket_count3,json=protectTicketCount3" json:"protect_ticket_count3,omitempty"`
	ProtectSlotNo3        *int32                 `protobuf:"zigzag32,31,opt,name=protect_slot_no3,json=protectSlotNo3" json:"protect_slot_no3,omitempty"`
	ProtectPerkId3        *int32                 `protobuf:"zigzag32,32,opt,name=protect_perk_id3,json=protectPerkId3" json:"protect_perk_id3,omitempty"`
	ProtectEffectValues3  *string                `protobuf:"bytes,33,opt,name=protect_effect_values3,json=protectEffectValues3" json:"protect_effect_values3,omitempty"`
	AfterPerkId1          *int32                 `protobuf:"zigzag32,34,opt,name=after_perk_id1,json=afterPerkId1" json:"after_perk_id1,omitempty"`
	AfterEffectValues1    *string                `protobuf:"bytes,35,opt,name=after_effect_values1,json=afterEffectValues1" json:"after_effect_values1,omitempty"`
	AfterPerkId2          *int32                 `protobuf:"zigzag32,36,opt,name=after_perk_id2,json=afterPerkId2" json:"after_perk_id2,omitempty"`
	AfterEffectValues2    *string                `protobuf:"bytes,37,opt,name=after_effect_values2,json=afterEffectValues2" json:"after_effect_values2,omitempty"`
	AfterPerkId3          *int32                 `protobuf:"zigzag32,38,opt,name=after_perk_id3,json=afterPerkId3" json:"after_perk_id3,omitempty"`
	AfterEffectValues3    *string                `protobuf:"bytes,39,opt,name=after_effect_values3,json=afterEffectValues3" json:"after_effect_values3,omitempty"`
	AfterPerkId4          *int32                 `protobuf:"zigzag32,40,opt,name=after_perk_id4,json=afterPerkId4" json:"after_perk_id4,omitempty"`
	AfterEffectValues4    *string                `protobuf:"bytes,41,opt,name=after_effect_values4,json=afterEffectValues4" json:"after_effect_values4,omitempty"`
	RequestHeaderLocation *string                `protobuf:"bytes,42,opt,name=request_header_location,json=requestHeaderLocation" json:"request_header_location,omitempty"`
	LogTime               *timestamppb.Timestamp `protobuf:"bytes,43,opt,name=log_time,json=logTime" json:"log_time,omitempty"`
	Uuid                  *string                `protobuf:"bytes,44,opt,name=uuid" json:"uuid,omitempty"`
}

func (x *WeaponTuningMsg) Reset() {
	*x = WeaponTuningMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weapon_tuning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponTuningMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponTuningMsg) ProtoMessage() {}

func (x *WeaponTuningMsg) ProtoReflect() protoreflect.Message {
	mi := &file_weapon_tuning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponTuningMsg.ProtoReflect.Descriptor instead.
func (*WeaponTuningMsg) Descriptor() ([]byte, []int) {
	return file_weapon_tuning_proto_rawDescGZIP(), []int{0}
}

func (x *WeaponTuningMsg) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *WeaponTuningMsg) GetCharacterId() string {
	if x != nil && x.CharacterId != nil {
		return *x.CharacterId
	}
	return ""
}

func (x *WeaponTuningMsg) GetCharacterClass() string {
	if x != nil && x.CharacterClass != nil {
		return *x.CharacterClass
	}
	return ""
}

func (x *WeaponTuningMsg) GetUniqueId() string {
	if x != nil && x.UniqueId != nil {
		return *x.UniqueId
	}
	return ""
}

func (x *WeaponTuningMsg) GetItemId() int32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *WeaponTuningMsg) GetItemId_Name() string {
	if x != nil && x.ItemId_Name != nil {
		return *x.ItemId_Name
	}
	return ""
}

func (x *WeaponTuningMsg) GetPerkId1() int32 {
	if x != nil && x.PerkId1 != nil {
		return *x.PerkId1
	}
	return 0
}

func (x *WeaponTuningMsg) GetEffectValues1() string {
	if x != nil && x.EffectValues1 != nil {
		return *x.EffectValues1
	}
	return ""
}

func (x *WeaponTuningMsg) GetPerkId2() int32 {
	if x != nil && x.PerkId2 != nil {
		return *x.PerkId2
	}
	return 0
}

func (x *WeaponTuningMsg) GetEffectValues2() string {
	if x != nil && x.EffectValues2 != nil {
		return *x.EffectValues2
	}
	return ""
}

func (x *WeaponTuningMsg) GetPerkId3() int32 {
	if x != nil && x.PerkId3 != nil {
		return *x.PerkId3
	}
	return 0
}

func (x *WeaponTuningMsg) GetEffectValues3() string {
	if x != nil && x.EffectValues3 != nil {
		return *x.EffectValues3
	}
	return ""
}

func (x *WeaponTuningMsg) GetPerkId4() int32 {
	if x != nil && x.PerkId4 != nil {
		return *x.PerkId4
	}
	return 0
}

func (x *WeaponTuningMsg) GetEffectValues4() string {
	if x != nil && x.EffectValues4 != nil {
		return *x.EffectValues4
	}
	return ""
}

func (x *WeaponTuningMsg) GetPresentUnlockedSlot() int32 {
	if x != nil && x.PresentUnlockedSlot != nil {
		return *x.PresentUnlockedSlot
	}
	return 0
}

func (x *WeaponTuningMsg) GetTuningTicketUniqueId() string {
	if x != nil && x.TuningTicketUniqueId != nil {
		return *x.TuningTicketUniqueId
	}
	return ""
}

func (x *WeaponTuningMsg) GetTuningTicketId() int32 {
	if x != nil && x.TuningTicketId != nil {
		return *x.TuningTicketId
	}
	return 0
}

func (x *WeaponTuningMsg) GetTuningTicketCount() int32 {
	if x != nil && x.TuningTicketCount != nil {
		return *x.TuningTicketCount
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectTicketId1() int32 {
	if x != nil && x.ProtectTicketId1 != nil {
		return *x.ProtectTicketId1
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectTicketCount1() int32 {
	if x != nil && x.ProtectTicketCount1 != nil {
		return *x.ProtectTicketCount1
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectSlotNo1() int32 {
	if x != nil && x.ProtectSlotNo1 != nil {
		return *x.ProtectSlotNo1
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectPerkId1() int32 {
	if x != nil && x.ProtectPerkId1 != nil {
		return *x.ProtectPerkId1
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectEffectValues1() string {
	if x != nil && x.ProtectEffectValues1 != nil {
		return *x.ProtectEffectValues1
	}
	return ""
}

func (x *WeaponTuningMsg) GetProtectTicketId2() int32 {
	if x != nil && x.ProtectTicketId2 != nil {
		return *x.ProtectTicketId2
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectTicketCount2() int32 {
	if x != nil && x.ProtectTicketCount2 != nil {
		return *x.ProtectTicketCount2
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectSlotNo2() int32 {
	if x != nil && x.ProtectSlotNo2 != nil {
		return *x.ProtectSlotNo2
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectPerkId2() int32 {
	if x != nil && x.ProtectPerkId2 != nil {
		return *x.ProtectPerkId2
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectEffectValues2() string {
	if x != nil && x.ProtectEffectValues2 != nil {
		return *x.ProtectEffectValues2
	}
	return ""
}

func (x *WeaponTuningMsg) GetProtectTicketId3() int32 {
	if x != nil && x.ProtectTicketId3 != nil {
		return *x.ProtectTicketId3
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectTicketCount3() int32 {
	if x != nil && x.ProtectTicketCount3 != nil {
		return *x.ProtectTicketCount3
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectSlotNo3() int32 {
	if x != nil && x.ProtectSlotNo3 != nil {
		return *x.ProtectSlotNo3
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectPerkId3() int32 {
	if x != nil && x.ProtectPerkId3 != nil {
		return *x.ProtectPerkId3
	}
	return 0
}

func (x *WeaponTuningMsg) GetProtectEffectValues3() string {
	if x != nil && x.ProtectEffectValues3 != nil {
		return *x.ProtectEffectValues3
	}
	return ""
}

func (x *WeaponTuningMsg) GetAfterPerkId1() int32 {
	if x != nil && x.AfterPerkId1 != nil {
		return *x.AfterPerkId1
	}
	return 0
}

func (x *WeaponTuningMsg) GetAfterEffectValues1() string {
	if x != nil && x.AfterEffectValues1 != nil {
		return *x.AfterEffectValues1
	}
	return ""
}

func (x *WeaponTuningMsg) GetAfterPerkId2() int32 {
	if x != nil && x.AfterPerkId2 != nil {
		return *x.AfterPerkId2
	}
	return 0
}

func (x *WeaponTuningMsg) GetAfterEffectValues2() string {
	if x != nil && x.AfterEffectValues2 != nil {
		return *x.AfterEffectValues2
	}
	return ""
}

func (x *WeaponTuningMsg) GetAfterPerkId3() int32 {
	if x != nil && x.AfterPerkId3 != nil {
		return *x.AfterPerkId3
	}
	return 0
}

func (x *WeaponTuningMsg) GetAfterEffectValues3() string {
	if x != nil && x.AfterEffectValues3 != nil {
		return *x.AfterEffectValues3
	}
	return ""
}

func (x *WeaponTuningMsg) GetAfterPerkId4() int32 {
	if x != nil && x.AfterPerkId4 != nil {
		return *x.AfterPerkId4
	}
	return 0
}

func (x *WeaponTuningMsg) GetAfterEffectValues4() string {
	if x != nil && x.AfterEffectValues4 != nil {
		return *x.AfterEffectValues4
	}
	return ""
}

func (x *WeaponTuningMsg) GetRequestHeaderLocation() string {
	if x != nil && x.RequestHeaderLocation != nil {
		return *x.RequestHeaderLocation
	}
	return ""
}

func (x *WeaponTuningMsg) GetLogTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LogTime
	}
	return nil
}

func (x *WeaponTuningMsg) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

var File_weapon_tuning_proto protoreflect.FileDescriptor

var file_weapon_tuning_proto_rawDesc = []byte{
	0x0a, 0x13, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x75,
	0x6e, 0x69, 0x6e, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x0e, 0x0a, 0x0f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x54, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x5f,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x6b, 0x5f,
	0x69, 0x64, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x70, 0x65, 0x72, 0x6b, 0x49,
	0x64, 0x31, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x31, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72,
	0x6b, 0x5f, 0x69, 0x64, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x70, 0x65, 0x72,
	0x6b, 0x49, 0x64, 0x32, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x65, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x33, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x70,
	0x65, 0x72, 0x6b, 0x49, 0x64, 0x33, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x33, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x65, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x34, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x6b, 0x49, 0x64, 0x34, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x34, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x34, 0x12,
	0x32, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x11, 0x52, 0x13,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x75,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x0e, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x11, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x31, 0x18, 0x13, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x31, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x31, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x31, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x6f, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4e, 0x6f, 0x31,
	0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6b,
	0x5f, 0x69, 0x64, 0x31, 0x18, 0x16, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x50, 0x65, 0x72, 0x6b, 0x49, 0x64, 0x31, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x31, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x31,
	0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x32, 0x18, 0x18, 0x20, 0x01, 0x28, 0x11, 0x52, 0x10, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x32, 0x12, 0x32,
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x18, 0x19, 0x20, 0x01, 0x28, 0x11, 0x52, 0x13, 0x70,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x32, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x6e, 0x6f, 0x32, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4e, 0x6f, 0x32, 0x12, 0x28, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x32,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x50,
	0x65, 0x72, 0x6b, 0x49, 0x64, 0x32, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x32,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x32, 0x12, 0x2c, 0x0a, 0x12,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x33, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x11, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x33, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x33, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x11, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x33, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e,
	0x6f, 0x33, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4e, 0x6f, 0x33, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x33, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x50, 0x65, 0x72, 0x6b, 0x49,
	0x64, 0x33, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x33, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x33, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x5f, 0x70, 0x65, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x31, 0x18, 0x22, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6b, 0x49, 0x64, 0x31, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x31, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x31,
	0x12, 0x24, 0x0a, 0x0e, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6b, 0x5f, 0x69,
	0x64, 0x32, 0x18, 0x24, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6b, 0x49, 0x64, 0x32, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x32, 0x18, 0x25,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x66, 0x74, 0x65, 0x72, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x32, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x5f, 0x70, 0x65, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x33, 0x18, 0x26, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6b, 0x49, 0x64, 0x33, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x33, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x33,
	0x12, 0x24, 0x0a, 0x0e, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6b, 0x5f, 0x69,
	0x64, 0x34, 0x18, 0x28, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6b, 0x49, 0x64, 0x34, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x34, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x66, 0x74, 0x65, 0x72, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x34, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x35, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x2b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x42, 0x15, 0x5a, 0x13, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x75, 0x6e, 0x69,
	0x6e, 0x67,
}

var (
	file_weapon_tuning_proto_rawDescOnce sync.Once
	file_weapon_tuning_proto_rawDescData = file_weapon_tuning_proto_rawDesc
)

func file_weapon_tuning_proto_rawDescGZIP() []byte {
	file_weapon_tuning_proto_rawDescOnce.Do(func() {
		file_weapon_tuning_proto_rawDescData = protoimpl.X.CompressGZIP(file_weapon_tuning_proto_rawDescData)
	})
	return file_weapon_tuning_proto_rawDescData
}

var file_weapon_tuning_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_weapon_tuning_proto_goTypes = []interface{}{
	(*WeaponTuningMsg)(nil),       // 0: weapon_tuning.WeaponTuningMsg
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_weapon_tuning_proto_depIdxs = []int32{
	1, // 0: weapon_tuning.WeaponTuningMsg.log_time:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_weapon_tuning_proto_init() }
func file_weapon_tuning_proto_init() {
	if File_weapon_tuning_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_weapon_tuning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponTuningMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_weapon_tuning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_weapon_tuning_proto_goTypes,
		DependencyIndexes: file_weapon_tuning_proto_depIdxs,
		MessageInfos:      file_weapon_tuning_proto_msgTypes,
	}.Build()
	File_weapon_tuning_proto = out.File
	file_weapon_tuning_proto_rawDesc = nil
	file_weapon_tuning_proto_goTypes = nil
	file_weapon_tuning_proto_depIdxs = nil
}
